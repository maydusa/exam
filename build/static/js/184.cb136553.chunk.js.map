{"version":3,"file":"static/js/184.cb136553.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/hook-form/RHFTextField.js","sections/auth/RegisterForm.js","pages/auth/Register.js","sections/auth/AuthSocial.js"],"sourcesContent":["import React from 'react';\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\nconst FormProvider = ({children, onSubmit, methods}) => {\r\n  return (\r\n    <Form {...methods}>\r\n        <form onSubmit={onSubmit}>\r\n            {children}\r\n        </form>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormProvider","import PropTypes from \"prop-types\";\r\n//form\r\nimport { useFormContext,Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { TextField } from \"@mui/material\";\r\n\r\nRHFTextField.propTypes = {\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    helperText: PropTypes.node\r\n}\r\n\r\nexport default function RHFTextField({name, helperText, ...other}){\r\n\r\n    const {control} = useFormContext();\r\n    return (\r\n       <Controller name={name} control={control} render={({field,fieldState:{error}})=>(\r\n        <TextField {...field} fullWidth\r\n         value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\r\n         error={!!error} helperText={error ? error.message : helperText}\r\n        {...other}/>\r\n       )}/>\r\n    )\r\n}","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as Yup from 'yup';\r\nimport FormProvider from '../../components/hook-form/FormProvider';\r\nimport { Alert, Button, IconButton, InputAdornment, Stack } from '@mui/material';\r\nimport { RHFTextField } from '../../components/hook-form';\r\nimport { Eye, EyeSlash } from 'phosphor-react';\r\n\r\nconst RegisterForm = () => {\r\n\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    //validation rules \r\n    const registerSchema = Yup.object().shape({\r\n      firstName:Yup.string().required('First Name is required'),\r\n      lastName:Yup.string().required('Last Name is required'),\r\n      email:Yup.string().required('Email is required').email('Email must be a valid email address'),\r\n      password:Yup.string().required('Password is required')\r\n    });\r\n  \r\n    const defaultValues = {\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'dulanjali@gmail.com',\r\n      password:'dula@123'\r\n    };\r\n  \r\n    const methods = useForm({\r\n      resolver: yupResolver(registerSchema),\r\n      defaultValues\r\n    });\r\n  \r\n    const {reset, setError, handleSubmit, formState:{errors, isSubmitting, isSubmitSuccessful}}\r\n     = methods;\r\n  \r\n     const onSubmit = async (data) =>{\r\n          try {\r\n              //submit data to backend\r\n          } catch (error) {\r\n              console.log(error);\r\n              reset();\r\n              setError('afterSubmit',{\r\n                  ...error,\r\n                  message: error.message\r\n              })\r\n          }\r\n     }\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3}>\r\n        {!!errors.afterSubmit && <Alert severity='error'>{errors.afterSubmit.message}</Alert>}\r\n        <Stack direction={{xs:'column', sm:'row'}} spacing={2}>\r\n            <RHFTextField name=\"firstName\" label='First Name'/>\r\n            <RHFTextField name=\"lastName\" label='Last Name'/>\r\n        </Stack>\r\n        <RHFTextField name='email' label='Email address'/>\r\n        <RHFTextField name='password' label='Password' type={showPassword ? 'text' : 'password'}\r\n        InputProps={{endAdornment:(\r\n            <InputAdornment>\r\n            <IconButton onClick={()=>{\r\n                setShowPassword(!showPassword);\r\n            }}>\r\n                {showPassword ? <Eye/>: <EyeSlash/>}\r\n            </IconButton>\r\n            </InputAdornment>\r\n        )}}/>\r\n        <Button fullWidth color='inherit' size='large' type='submit' variant='contained'\r\n        sx={{bgcolor:'text.primary', color:(theme)=> theme.palette.mode === 'light' ?\r\n         'common.white':'grey.800',\r\n         '&:hover':{\r\n            bgcolor:'text.primary',\r\n            color:(theme)=> theme.palette.mode === 'light' ? 'common.white':'grey.800',\r\n         }}}>Create Account</Button>\r\n        </Stack>\r\n        \r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import { Link, Stack, Typography } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport React from 'react'\r\nimport RegisterForm from '../../sections/auth/RegisterForm';\r\nimport AuthSocial from '../../sections/auth/AuthSocial';\r\n\r\nconst Register = () => {\r\n  return (\r\n    <Stack spacing={2} sx={{mb:5, position:'relative'}}>\r\n        <Typography variant='h4'>\r\n            Get Started With WeChat\r\n        </Typography>\r\n        <Stack direction={'row'} spacing={0.5}>\r\n            <Typography variant='body2'>Allready have an account?</Typography>\r\n            <Link component={RouterLink} to='/auth/login' variant='subtitle2'>Sign in</Link>\r\n        </Stack>\r\n        {/* Register Form */}\r\n        <RegisterForm/>\r\n\r\n        <Typography component={'div'} sx={{color:'text.secondary', mt:3, typography:'caption'\r\n    ,textAlign:'center'}}>{'By signining up, I agree to '}\r\n    <Link underline='always' color='text.primary'>Terms of service</Link>{' and '}\r\n    <Link underline='always' color='text.primary'>Privacy policy</Link>\r\n    </Typography>\r\n    <AuthSocial/>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Register","import { Divider, IconButton, Stack } from '@mui/material'\r\nimport { GithubLogo, GoogleLogo, TwitterLogo } from 'phosphor-react'\r\nimport React from 'react'\r\n\r\nconst AuthSocial = () => {\r\n  return (\r\n    <div>\r\n        <Divider sx={{my:2.5, typography:'overline', color:'text.disabled', '&::before, ::after':{\r\n            borderTopStyle:'dashed'\r\n        }}}>OR</Divider>\r\n        <Stack direction={'row'} justifyContent='center' spacing={2}>\r\n            <IconButton>\r\n                <GoogleLogo color='#DF3E30'/>\r\n            </IconButton>\r\n            <IconButton color='inherit'>\r\n                <GithubLogo />\r\n            </IconButton>\r\n            <IconButton>\r\n                <TwitterLogo color='#1C9CEA'/>\r\n            </IconButton>\r\n        </Stack>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthSocial"],"names":["children","onSubmit","methods","RHFTextField","name","helperText","other","control","useFormContext","render","field","error","fieldState","TextField","fullWidth","value","message","useState","showPassword","setShowPassword","registerSchema","Yup","shape","firstName","required","lastName","email","password","useForm","resolver","yupResolver","defaultValues","handleSubmit","reset","setError","formState","errors","isSubmitting","isSubmitSuccessful","data","FormProvider","Stack","spacing","afterSubmit","Alert","severity","direction","xs","sm","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","Button","color","size","variant","sx","bgcolor","theme","palette","mode","mb","position","Typography","Link","component","RouterLink","to","mt","typography","textAlign","underline","AuthSocial","my","borderTopStyle","justifyContent"],"sourceRoot":""}