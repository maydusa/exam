{"version":3,"file":"static/js/507.44baafd8.chunk.js","mappings":"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","sources":["sections/settings/Shortcuts.js","pages/dashboard/Settings.js"],"sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Slide,Stack, Typography } from '@mui/material'\r\nimport React from 'react';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  const list = [\r\n    {\r\n       key:0,\r\n       title: 'Mark as unread ',\r\n       combination:['Cmd','Shift','U'] \r\n    },\r\n    {\r\n        key:1,\r\n        title: 'Mute ',\r\n        combination:['Cmd','Shift','M'] \r\n     },\r\n     {\r\n        key:2,\r\n        title: 'Archive Chat',\r\n        combination:['Cmd','Shift','E'] \r\n     },\r\n     {\r\n        key:3,\r\n        title: 'Delete Chat ',\r\n        combination:['Cmd','Shift','D'] \r\n     },\r\n     {\r\n        key:4,\r\n        title: 'Pin Chat ',\r\n        combination:['Cmd','Shift','P'] \r\n     },\r\n     {\r\n        key:5,\r\n        title: 'Search ',\r\n        combination:['Cmd','F'] \r\n     },\r\n     {\r\n        key:6,\r\n        title: 'Search Chat ',\r\n        combination:['Cmd','Shift','F'] \r\n     },\r\n     {\r\n        key:7,\r\n        title: 'New Chat',\r\n        combination:['Cmd','N'] \r\n     },\r\n     {\r\n        key:8,\r\n        title: 'Next Chat ',\r\n        combination:['Ctrl','Tab'] \r\n     },\r\n     {\r\n        key:9,\r\n        title: 'Previous Chat',\r\n        combination:['Ctrl','Shift','Tab'] \r\n     },\r\n     {\r\n        key:10,\r\n        title: 'New Group',\r\n        combination:['Cmd','Shift','N'] \r\n     },\r\n     {\r\n        key:11,\r\n        title: 'Profile & About',\r\n        combination:['Cmd','P'] \r\n     },\r\n     {\r\n        key:12,\r\n        title: 'Increase speed of voice message',\r\n        combination:['Shift','.'] \r\n     },\r\n     {\r\n        key:13,\r\n        title: 'Decrease speed of voice message',\r\n        combination:['Shift',','] \r\n     },\r\n     {\r\n        key:14,\r\n        title: 'Settings',\r\n        combination:['Shift','S'] \r\n     },\r\n     {\r\n        key:15,\r\n        title: 'Emoji Panel',\r\n        combination:['Cmd','E'] \r\n     },\r\n     {\r\n        key:16,\r\n        title: 'Sticker Panel',\r\n        combination:['Cmd','S'] \r\n     },\r\n  ]\r\n\r\nconst Shortcuts = ({open, handleClose}) => {\r\n  return (\r\n    <>\r\n    <Dialog fullWidth maxWidth='md' open={open} keepMounted onClose={handleClose} \r\n    sx={{p:4}} TransitionComponent={Transition}>\r\n        <DialogTitle>\r\n            Keyboard Shortcuts\r\n        </DialogTitle>\r\n        <DialogContent sx={{mt:4}}>\r\n            <Grid container spacing={3}>\r\n                {list.map(({key,title,combination})=>\r\n                    <Grid key={key} container item xs={6}>\r\n                        <Stack sx={{width:'100%'}} justifyContent='space-between' \r\n                        spacing={3} direction='row' alignItems='center'>\r\n                            <Typography variant='caption' sx={{fontSize:14}}>{title}</Typography>\r\n                            <Stack spacing={2} direction='row'>\r\n                                {combination.map((el)=>{\r\n                                    return <Button disabled variant='contained' sx={{color:'#212121'}}>\r\n                                        {el}\r\n                                    </Button>\r\n                                })}\r\n                            </Stack>\r\n                        </Stack>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button variant='contained' onClick={handleClose}>Ok</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Shortcuts","import { Avatar, Box, Divider, IconButton, Stack, Typography } from '@mui/material'\r\nimport React, {useState} from 'react';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { Bell, CaretLeft, Image, Info, Key, Keyboard, Lock, Note, PencilCircle } from 'phosphor-react';\r\nimport { faker } from '@faker-js/faker';\r\nimport Shortcuts from '../../sections/settings/Shortcuts';\r\nimport Conversation from '../../components/Conversation';\r\n\r\nconst Settings = () => {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [openShortcuts, setOpenShortcuts] = useState(false);\r\n\r\n    const handleOpenShortcuts = ()=>{\r\n        setOpenShortcuts(true);\r\n    }\r\n\r\n    const handleCloseShortcuts = ()=>{\r\n        setOpenShortcuts(false);\r\n    }\r\n\r\n    const list = [\r\n      {\r\n        key:0,\r\n        icon: <Bell size={20}/>,\r\n        title: 'Notifications',\r\n        onclick: () =>{}\r\n      },\r\n      {\r\n        key:1,\r\n        icon: <Lock size={20}/>,\r\n        title: 'Privacy',\r\n        onclick: () =>{}\r\n      },\r\n      {\r\n        key:2,\r\n        icon: <Key size={20}/>,\r\n        title: 'Security',\r\n        onclick: () =>{}\r\n      },\r\n      {\r\n        key:3,\r\n        icon: <PencilCircle size={20}/>,\r\n        title: 'Theme',\r\n        //onclick: handleOpenTheme\r\n        onclick: () =>{}\r\n      },\r\n      {\r\n        key:4,\r\n        icon: <Image size={20}/>,\r\n        title: 'Chat Wallpaper',\r\n        onclick: () =>{}\r\n      },\r\n      {\r\n        key:5,\r\n        icon: <Note size={20}/>,\r\n        title: 'Request Account Info',\r\n        onclick: () =>{}\r\n      },\r\n      {\r\n        key:6,\r\n        icon: <Keyboard size={20}/>,\r\n        title: 'Keyboard Shortcuts',\r\n        onclick: handleOpenShortcuts\r\n      },\r\n      {\r\n        key:7,\r\n        icon: <Info size={20}/>,\r\n        title: 'Help',\r\n        onclick: () =>{}\r\n      },\r\n    ]\r\n\r\n  return (\r\n    <>\r\n    <Stack direction='row' sx={{width:'100%'}}>\r\n        {/* Left panel */}\r\n        <Box className='scrollbar' sx={{overflow:'scroll', height:'100vh', width:320, \r\n        backgroundColor:theme.palette.mode === 'light' ? '#F8FAFF' : theme.palette.background,\r\n        boxShadow:'0px 0px 2px rgba(0)'}}>\r\n          \r\n            <Stack p={4} spacing={5}>\r\n                {/* Header */}\r\n                <Stack direction={'row'} alignItems='center' spacing={3}>\r\n                    <IconButton>\r\n                        <CaretLeft size={24} color='#4B4B4B'/>\r\n                    </IconButton>\r\n                    <Typography variant='h6'>Settings</Typography>\r\n                </Stack>\r\n                {/* Profile */}\r\n                <Stack direction='row' spacing={3}>\r\n                    <Avatar sx={{height:56, width:56}} src={faker.image.avatar()} alt={faker.name.fullName()}/>\r\n                    <Stack spacing={0.5}>\r\n                        <Typography variant='article'>\r\n                            {faker.name.fullName()}\r\n                        </Typography>\r\n                        <Typography variant='body2'>\r\n                            {faker.random.words()}\r\n                        </Typography>\r\n                    </Stack>\r\n                </Stack>\r\n                {/* List of options */}\r\n                <Stack spacing={4}>\r\n                    {list.map(({key,icon,title,onclick})=> <>\r\n                        <Stack spacing={2} sx={{cursor:'pointer'}} onClick={onclick}>\r\n                            <Stack direction='row' spacing={2} >\r\n                                {icon}\r\n                                <Typography variant='body2'>{title}</Typography>\r\n                            </Stack>\r\n                            {key !== 7 && <Divider/>}\r\n                        </Stack>\r\n                    </>)}\r\n                </Stack>\r\n            </Stack>\r\n            \r\n        </Box>\r\n        {/* Right panel */}\r\n        \r\n    </Stack>\r\n    {openShortcuts && <Shortcuts open={openShortcuts} handleClose={handleCloseShortcuts}/>}\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Settings"],"names":["Transition","React","props","ref","Slide","direction","list","key","title","combination","open","handleClose","Dialog","fullWidth","maxWidth","keepMounted","onClose","sx","p","TransitionComponent","DialogTitle","DialogContent","mt","Grid","container","spacing","map","item","xs","Stack","width","justifyContent","alignItems","Typography","variant","fontSize","el","Button","disabled","color","DialogActions","onClick","theme","useTheme","useState","openShortcuts","setOpenShortcuts","icon","size","onclick","Box","className","overflow","height","backgroundColor","palette","mode","background","boxShadow","IconButton","Avatar","src","faker","alt","cursor","Divider"],"sourceRoot":""}